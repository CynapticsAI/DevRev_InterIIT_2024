{
    "tools": [
        {
            "tool_description": "Returns a list of work items matching the request.",
            "tool_name": "works_list",
            "title": "works_list",
            "return_type": "array of objects",
            "argument_list": [
              {
                "argument_name": "applies_to_part",
                "argument_description": "Filters for work belonging to any of the provided parts",
                "argument_type": "array of strings",
                "example": [
                  ["FEAT-123"],
                  ["ENH-123", "PROD-123", "CAPL-123", "CAPL-359"],
                  ["HGH-262", "FEAT-007"]
                ]
              },
              {
                "argument_name": "created_by",
                "argument_description": "Filters for work created by any of these users",
                "argument_type": "array of strings",
                "example": [["DEVU-123"], ["PRO-233", "CRE-1233"]]
              },
              {
                "argument_name": "issue.priority",
                "argument_description": "Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.",
                "argument_type": "array of strings",
                "example": [["p0"], ["p0", "p3"], ["p0", "p1", "p2", "p3"]]
              },
              {
                "argument_name": "issue.rev_orgs",
                "argument_description": "Filters for issues with any of the provided Rev organizations",
                "argument_type": "array of strings",
                "example": [["REV-123"], ["REV-468", "REV-979"]]
              },
              {
                "argument_name": "limit",
                "argument_description": "The maximum number of works to return. The default is 50",
                "argument_type": "integer(int32)",
                "example": [40, 25, 2, 1, 50]
              },
              {
                "argument_name": "owned_by",
                "argument_description": "Filters for work owned by any of these users",
                "argument_type": "array of strings",
                "example": [["DEVU-123"], ["CAPL-264", "HGH-190"]]
              },
              {
                "argument_name": "stage.name",
                "argument_description": "Filters for records in the provided stage(s) by name",
                "argument_type": "array of strings",
                "example": [["triage"], ["design", "triage"]]
              },
              {
                "argument_name": "ticket.needs_response",
                "argument_description": "Filters for tickets that need a response",
                "argument_type": "boolean",
                "example": ["True", "False"]
              },
              {
                "argument_name": "ticket.rev_org",
                "argument_description": "Filters for tickets associated with any of the provided Rev organizations",
                "argument_type": "array of strings",
                "example": [["REV-123"], ["REV-238", "REV-119"]]
              },
              {
                "argument_name": "ticket.severity",
                "argument_description": "Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium",
                "argument_type": "array of strings",
                "example": [
                  ["blocker"],
                  ["blocker", "high"],
                  ["blocker", "high", "low"]
                ]
              },
              {
                "argument_name": "ticket.source_channel",
                "argument_description": "Filters for tickets with any of the provided source channels",
                "argument_type": "array of strings",
                "example": [["slack"], ["github"], ["slack", "scrum"]]
              },
              {
                "argument_name": "type",
                "argument_description": "Filters for work of the provided types. Allowed values: issue, ticket, task",
                "argument_type": "array of strings",
                "example": [["issue"], ["ticket"], ["task"]]
              }
            ]
          },
          {
            "tool_description": "Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail.",
            "tool_name": "summarize_objects",
            "title": "summarize_objects",
            "return_type": "array of objects",
            "argument_list": [
              {
                "argument_name": "objects",
                "argument_description": "List of objects to summarize",
                "argument_type": "array of objects",
                "example": [["issue1"], ["task1", "issue3"]]
              }
            ]
          },
          {
            "tool_description": "Returns a list of objects sorted by priority.",
            "tool_name": "prioritize_objects",
            "title": "prioritize_objects",
            "return_type": "array of objects",
            "argument_list": [
              {
                "argument_name": "objects",
                "argument_description": "A list of objects to be prioritized",
                "argument_type": "array of objects",
                "example": [["issue4"], ["task2", "issue3"], ["ticket9"]]
              }
            ]
          },
          {
            "tool_description": "Adds the given work items to the sprint",
            "tool_name": "add_work_items_to_sprint",
            "title": "add_work_items_to_sprint",
            "return_type": "none",
            "argument_list": [
              {
                "argument_name": "work_ids",
                "argument_description": "A list of work item IDs to be added to the sprint.",
                "argument_type": "array of strings",
                "example": [["deve/0:issue/6"], ["devdon:core:dvrv-us-1:task/1"]]
              },
              {
                "argument_name": "sprint_id",
                "argument_description": "The ID of the sprint to which the work items should be added.",
                "argument_type": "str",
                "example": ["sprint_4", "sprint_1"]
              }
            ]
          },
          {
            "tool_description": "Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest.",
            "tool_name": "search_object_by_name",
            "title": "search_object_by_name",
            "return_type": "string",
            "argument_list": [
              {
                "argument_name": "query",
                "argument_description": "The search string, for example, customer's name, part name, user name.",
                "argument_type": "string",
                "example": ["DEV-123", "REV-432"]
              }
            ]
          },
          {
            "tool_description": "Returns the ID of the current sprint.",
            "tool_name": "get_sprint_id",
            "title": "get_sprint_id",
            "return_type": "string",
            "argument_list": []
          },
          {
            "tool_description": "Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item.",
            "tool_name": "create_actionable_tasks_from_text",
            "title": "create_actionable_tasks_from_text",
            "return_type": "array of strings",
            "argument_list": [
              {
                "argument_name": "text",
                "argument_description": "The text from which the actionable insights need to be created.",
                "argument_type": "string",
                "example": [
                  "Transcript from slack channels",
                  "Transcripts from a meeting",
                  "workplace report"
                ]
              }
            ]
          },
          {
            "tool_description": "Returns the ID of the current user.",
            "tool_name": "who_am_i",
            "title": "who_am_i",
            "return_type": "string",
            "argument_list": []
          },
          {
            "tool_description": "Returns a list of work items that are similar to the given work item",
            "tool_name": "get_similar_work_items",
            "title": "get_similar_work_items",
            "return_type": "array of objects",
            "argument_list": [
              {
                "argument_name": "work_id",
                "argument_description": "The ID of the work item for which you want to find similar items",
                "argument_type": "string",
                "example": ["der/0:issue/2", "ton:core:dvrv-us-3:sprint/10"]
              }
            ]
          },
        {
            "tool_description": "Retrieves detailed information about a specific object in the system of record.",
            "tool_name": "get_object_details",
            "title": "get_object_details",
            "return_type": "object",
            "argument_list": [
                {
                    "argument_name": "object_id",
                    "argument_description": "The ID of the object for which details are requested.",
                    "argument_type": "string",
                    "example": [
                        "issue123"
                    ]
                },
                {
                    "argument_name": "include_history",
                    "argument_description": "Indicates whether to include historical data.",
                    "argument_type": "boolean",
                    "example": [
                        "True",
                        "False"
                    ]
                },
                {
                    "argument_name": "additional_info",
                    "argument_description": "Any additional information to be included in the details.",
                    "argument_type": "string",
                    "example": [
                        "comments"
                    ]
                }
            ]
        },
        {
            "tool_description": "Updates the status of a work item based on the provided criteria.",
            "tool_name": "update_work_status",
            "title": "update_work_status",
            "return_type": "None",
            "argument_list": [
                {
                    "argument_name": "work_id",
                    "argument_description": "The ID of the work item to be updated.",
                    "argument_type": "string",
                    "example": [
                        "dev/0:task/5"
                    ]
                },
                {
                    "argument_name": "new_status",
                    "argument_description": "The new status to be set.",
                    "argument_type": "string",
                    "example": [
                        "completed"
                    ]
                },
                {
                    "argument_name": "comment",
                    "argument_description": "Additional comments or notes for the update.",
                    "argument_type": "string",
                    "example": [
                        "Code review approved."
                    ]
                }
            ]
        },
        {
            "tool_description": "Assigns specific work items to a designated user or team.",
            "tool_name": "assign_work_to_user",
            "title": "assign_work_to_user",
            "return_type": "None",
            "argument_list": [
                {
                    "argument_name": "work_ids",
                    "argument_description": "The IDs of the work items to be assigned.",
                    "argument_type": "array of strings",
                    "example": [
                        [
                            "issue7",
                            "task3"
                        ]
                    ]
                },
                {
                    "argument_name": "assignee",
                    "argument_description": "The user or team to whom the work items should be assigned.",
                    "argument_type": "string",
                    "return_type": "object",
                    "example": [
                        "DEV-Team"
                    ]
                },
                {
                    "argument_name": "priority",
                    "argument_description": "The priority level for the assigned work items.",
                    "argument_type": "string",
                    "example": [
                        "p0",
                        "p1"
                    ]
                }
            ]
        },
        {
            "tool_description": "Creates new objects and establishes links between them in the system of record.",
            "tool_name": "create_linked_objects",
            "title": "create_linked_objects",
            "return_type": "None",
            "argument_list": [
                {
                    "argument_name": "parent_object_id",
                    "argument_description": "The ID of the parent object.",
                    "argument_type": "string",
                    "example": [
                        "feature123"
                    ]
                },
                {
                    "argument_name": "linked_objects",
                    "argument_description": "List of objects to be created and linked to the parent.",
                    "argument_type": "array of objects",
                    "example": [
                        [
                            {
                                "task1": "Design phase"
                            },
                            {
                                "task2": "Implementation"
                            }
                        ]
                    ]
                },
                {
                    "argument_name": "link_type",
                    "argument_description": "The type of relationship between the objects (e.g., dependent, related).",
                    "argument_type": "string",
                    "example": [
                        "dependent"
                    ]
                }
            ]
        },
        {
            "tool_description": "Removes specified work items from a designated sprint.",
            "tool_name": "remove_work_items_from_sprint",
            "title": "remove_work_items_from_sprint",
            "return_type": "None",
            "argument_list": [
                {
                    "argument_name": "work_ids",
                    "argument_description": "The IDs of the work items to be removed from the sprint.",
                    "argument_type": "array of strings",
                    "example": [
                        [
                            "dev/0:task/8",
                            "issue6"
                        ]
                    ]
                },
                {
                    "argument_name": "sprint_id",
                    "argument_description": "The ID of the sprint from which the work items should be removed.",
                    "argument_type": "string",
                    "example": [
                        "sprint_2"
                    ]
                }
            ]
        },
        {
            "tool_description": "Escalates the priority of a set of work items based on defined criteria.",
            "tool_name": "escalate_priority",
            "title": "escalate_priority",
            "return_type": "None",
            "argument_list": [
                {
                    "argument_name": "work_ids",
                    "argument_description": "The IDs of the work items to have their priority escalated.",
                    "argument_type": "array of strings",
                    "example": [
                        [
                            "ticket12",
                            "task7"
                        ]
                    ]
                },
                {
                    "argument_name": "escalation_criteria",
                    "argument_description": "The conditions under which priority escalation occurs.",
                    "argument_type": "string",
                    "example": [
                        "overdue"
                    ]
                }
            ]
        },
        {
            "tool_description": "Retrieves a list of work items that are overdue based on their due dates.",
            "tool_name": "get_overdue_work_items",
            "title": "get_overdue_work_items",
            "return_type": "array of objects",
            "argument_list": [
                {
                    "argument_name": "due_date",
                    "argument_description": "The due date for identifying overdue work items.",
                    "argument_type": "string",
                    "example": [
                        "2023-05-15"
                    ]
                }
            ]
        },
        {
            "tool_description": "Retrieves the historical changes and events associated with a specific work item.",
            "tool_name": "get_work_item_history",
            "title": "get_work_item_history",
            "return_type": "array of objects",
            "argument_list": [
                {
                    "argument_name": "work_id",
                    "argument_description": "The ID of the work item for which history is requested.",
                    "argument_type": "string",
                    "example": [
                        "task20"
                    ]
                },
                {
                    "argument_name": "start_date",
                    "argument_description": "The start date for filtering the history events.",
                    "argument_type": "string",
                    "example": [
                        "2023-01-01"
                    ]
                }
            ]
        },
        {
            "tool_description": "Adds a comment to a work item to provide additional context or updates.",
            "tool_name": "add_comment",
            "title": "add_comment",
            "return_type": "None",
            "argument_list": [
                {
                    "argument_name": "work_id",
                    "argument_description": "The ID of the work item to which the comment should be added.",
                    "argument_type": "string",
                    "example": [
                        "issue15"
                    ]
                },
                {
                    "argument_name": "comment_text",
                    "argument_description": "The text of the comment to be added.",
                    "argument_type": "string",
                    "example": [
                        "Resolved and verified on test environment."
                    ]
                }
            ]
        },
        {
            "tool_description": "Retrieves a list of attachments associated with a specific work item.",
            "tool_name": "get_work_item_attachments",
            "title": "get_work_item_attachments",
            "return_type": "array of objects",
            "argument_list": [
                {
                    "argument_name": "work_id",
                    "argument_description": "The ID of the work item for which attachments are requested.",
                    "argument_type": "string",
                    "example": [
                        "ticket25"
                    ]
                }
            ]
        },
        {
            "tool_description": "Creates a new release version in the system and associates it with relevant work items.",
            "tool_name": "create_release_version",
            "title": "create_release_version",
            "return_type": "None",
            "argument_list": [
                {
                    "argument_name": "version_name",
                    "argument_description": "The name or identifier of the new release version.",
                    "argument_type": "string",
                    "example": [
                        "v2.0"
                    ]
                },
                {
                    "argument_name": "associated_work_ids",
                    "argument_description": "The IDs of work items to be associated with the release.",
                    "argument_type": "array of strings",
                    "example": [
                        [
                            "task30",
                            "issue18"
                        ]
                    ]
                }
            ]
        },
        {
            "tool_description": "Retrieves key performance metrics for a specific work item, such as cycle time and lead time.",
            "tool_name": "get_work_item_metrics",
            "title": "get_work_item_metrics",
            "return_type": "array of objects",
            "argument_list": [
                {
                    "argument_name": "work_id",
                    "argument_description": "The ID of the work item for which metrics are requested.",
                    "argument_type": "string",
                    "example": [
                        "task40"
                    ]
                }
            ]
        },
        {
            "tool_description": "Updates the assignee of a specific work item.",
            "tool_name": "update_work_item_assignee",
            "title": "update_work_item_assignee",
            "return_type": "None",
            "argument_list": [
                {
                    "argument_name": "work_id",
                    "argument_description": "The ID of the work item to be updated.",
                    "argument_type": "string",
                    "example": [
                        "task50"
                    ]
                },
                {
                    "argument_name": "new_assignee",
                    "argument_description": "The new assignee for the work item.",
                    "argument_type": "string",
                    "example": [
                        "DEV-Team"
                    ]
                }
            ]
        },
        {
            "tool_description": "Retrieves the comments associated with a specific work item.",
            "tool_name": "get_work_item_comments",
            "title": "get_work_item_comments",
            "return_type": "array of strings",
            "argument_list": [
                {
                    "argument_name": "work_id",
                    "argument_description": "The ID of the work item for which comments are requested.",
                    "argument_type": "string",
                    "example": [
                        "issue30"
                    ]
                }
            ]
        },
        {
            "tool_description": "Closes the current active sprint and archives its data.",
            "tool_name": "close_sprint",
            "title": "close_sprint",
            "return_type": "None",
            "argument_list": [
                {
                    "argument_name": "sprint_id",
                    "argument_description": "The ID of the sprint to be closed.",
                    "argument_type": "string",
                    "example": [
                        "sprint_5"
                    ]
                },
                {
                    "argument_name": "archive_data",
                    "argument_description": "Indicates whether to archive data from the closed sprint.",
                    "argument_type": "boolean",
                    "example": [
                        "True",
                        "False"
                    ]
                }
            ]
        },
        {
            "tool_description": "Retrieves the dependencies (predecessors and successors) of a specific work item.",
            "tool_name": "get_work_item_dependencies",
            "title": "get_work_item_dependencies",
            "return_type": "array of objects",
            "argument_list": [
                {
                    "argument_name": "work_id",
                    "argument_description": "The ID of the work item for which dependencies are requested.",
                    "argument_type": "string",
                    "example": [
                        "task70"
                    ]
                }
            ]
        },
        {
            "tool_name": "timeline_entries_list",
            "tool_description": "Lists the timeline entries for an object",
            "title": "timeline_entries_list",
            "return_type": "array of objects",
            "argument_list": [
                {
                    "argument_name": "object",
                    "argument_description": "The ID of the object to list timeline entries for",
                    "argument_type": "string",
                    "example": [
                        "PROD-12345"
                    ]
                },
                {
                    "argument_name": "limit",
                    "argument_description": "The maximum number of works to return. The default is 50",
                    "argument_type": "integer(int32)",
                    "example": [
                        40,
                        25,
                        2,
                        1,
                        50
                    ]
                }
            ]
        },
        {
            "tool_name": "tags_list",
            "tool_description": "Lists the available tags",
            "title": "tags_list",
            "return_type": "array of objects",
            "argument_list": [
                {
                    "argument_name": "limit",
                    "argument_description": "The maximum number of works to return. The default is 50",
                    "argument_type": "integer(int32)",
                    "example": [
                        40,
                        25,
                        2,
                        1,
                        50
                    ]
                },
                {
                    "argument_name": "name",
                    "argument_description": "Filters for tags with the provided names",
                    "argument_type": "array of strings",
                    "example": [
                        [
                            "tag1",
                            "tag2"
                        ],
                        [
                            "tag3"
                        ]
                    ]
                }
            ]
        }
    ]
}